import React, { useState, useEffect } from 'react';
import { View, Text, Image, TouchableOpacity, Alert } from 'react-native';
import { styles } from './SuccessCard.styles';
import GoodjobImage from '../assets/Goodjob.png';
import XImage from '../assets/X.png';
import AsyncStorage from '@react-native-async-storage/async-storage';

const SuccessCard = ({ navigation, route }) => {
  // Extract quiz_id from route params
  const { quiz_id, score, totalQuestions } = route.params || {};

  // State for quiz results
  const [quizResult, setQuizResult] = useState({
    score: score ? `${score}/${totalQuestions}` : '8/10',
    points: score ? `+${score * 10} Points` : '+80 Points',
    message: score 
      ? `You answered ${score} out of ${totalQuestions} questions correctly. See the detailed Report.`
      : 'You answered 8 out of 10 questions correctly. See the detailed Report.'
  });

  // Fetch quiz result from API
  const fetchQuizResult = async () => {
    try {
      // Only attempt to fetch if we have a quiz_id
      if (!quiz_id) return;

      const token = await AsyncStorage.getItem('userToken');
      
      const response = await fetch(`http://10.42.0.1:7000/api/result/quiz-summary/${quiz_id}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`,
        },
      });
      
      if (response.ok) {
        const data = await response.json();
        
        // Update state with fetched data
        setQuizResult({
          score: `${data.score}/${data.total_questions}`,
          points: `+${data.score * 10} Points`,
          message: `You answered ${data.score} out of ${data.total_questions} questions correctly. See the detailed Report.`
        });
      } else {
        console.error('Failed to fetch quiz result:', response.status);
      }
    } catch (error) {
      console.error('Error fetching quiz result:', error);
    }
  };

  // Handle close button press
  const handleClose = () => {
    navigation.navigate('Home');
  };

  // Handle view report button press
  const handleViewReport = () => {
    // Navigate to QuizCorrectionScreen with quiz_id
    if (quiz_id) {
      navigation.navigate('QuizCorrectionScreen', { quiz_id });
    } else {
      Alert.alert('Error', 'Unable to view report: quiz ID not found');
    }
  };

  // Load data when component mounts
  useEffect(() => {
    fetchQuizResult();
  }, [quiz_id]);

  return (
    <View style={styles.screenContainer}>
      {/* Close button */}
      <TouchableOpacity style={styles.xButton} onPress={handleClose}>
        <Image source={XImage} style={styles.xIcon} />
      </TouchableOpacity>
      
      <View style={styles.contentContainer}>
        <Image source={GoodjobImage} style={styles.image} />
        
        <View style={styles.redBackground}>
          <Text style={styles.score}>{quizResult.score}</Text>
          <Text style={styles.points}>{quizResult.points}</Text>
          <Text style={styles.message}>{quizResult.message}</Text>
        </View>
        
        <TouchableOpacity
          style={styles.button}
          onPress={handleViewReport}
        >
          <Text style={styles.buttonText}>View Report</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

export default SuccessCard;
